/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: test (rename also the example and DEFINE lines below)
*
* %Identification
* Written by: Konstantin Pavlov
* Date:  2018_01_23
* Checked: 2018_01_23
* Origin: Your institution
* Release: McStas CVS-080208
* Version: 0.2
* %INSTRUMENT_SITE: Templates (replace with Institution_name_as_a_single_word)
*
* Instrument short description - SANS at IR-8 reactor (NRC KI)
*
* %Description
* Instrument longer description (type, elements, usage...)
* A model of SANS instrument placed at N1 neutron guide HEC-10 channel IR-8 reactor NRC KI (Moscow). The model optimized for school virtual laboratory and simulates the SANS experiment. Written for Kor-service company (Samara city)
* Example: mcrun test.instr <parameters=values>
*
* %Parameters
* Par1: [unit] Parameter1 description
*
* %Link
* A reference/HTML link for more information
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT H1(lambda = 4.5, slit1_w = 0.032, slit2_w = 0.016, slit3_w = 0.016, int det_position = 3, int sample_num = 1)

DECLARE
%{

//source parameters
double source_radius = 0.084;
double source_intensity = 1.6e13; //this is in 4PI, need to be divided
double source_temp = 30;
double lambda_min, lambda_max;

//collimator parameters
double source_coll_dist = 1.31;
double guide_width = 0.042;
double guide_height = 0.032;
double coll_length = 1.007;
double coll_length_uncoated = 0.507, coll_length_coated;
double m_left_right = 2, m_top_bottom = 1;
double slope;
double shutter1_length = 0.2;

//bender parameters
double guide_before_length = 1.5, bender_length = 3.0, guide_after_length = 1;
int bender_chan_num = 6;
double bender_wall_thick = 0.0004;
double bender_rot = 0.0272;
int bender_piece_num = 6;//number of bender pieces
double m_overall = 1;

//shutter2 parameters
double shutter2_length = 0.45;

//guide parameters
double wavy = 0.182, R0 = 0.97, Rm2 = 0.90;
double guide_length = 8.0;

// selector parameters
double selector_nu;

//instrument parameters
double coll_line_length = 4.8;
double Lsd;
double sph_R = 800.0, sph_dR = 0;
double sample_dim;

%}

INITIALIZE
%{
lambda_min = 0.8 * lambda;
lambda_max = 1.2 * lambda;
wavy = wavy*1e-3*sqrt(8*log(2))*RAD2DEG; //translate mrad to rad and then to degs

slope = (1 - Rm2/R0)/0.0218; //slope calculation from reflectivity values

source_intensity = source_intensity/4/PI; //normilize source intensity in 1 sr

coll_length_coated = coll_length - coll_length_uncoated;

bender_length = bender_length/bender_piece_num; //now bender length is one piece length
bender_rot = bender_rot*RAD2DEG/bender_piece_num; //now bender piece rotation

selector_nu = 3956.0*48.3*DEG2RAD/2/PI/lambda/0.25;

sample_dim = slit3_w * 1.2;

switch( det_position )   
{  
    case 1:  
        Lsd = 0.7;  
        break;  
    case 2 :  
        Lsd = 3.1;  
        break;  
    case 3 :  
        Lsd = 5.5;  
        break; 
    default :
        printf("Wrong detector position! Operating at #3 - 5.5m of sample-to-detector distance.\n");
        Lsd = 5.5;
        break; 
}

switch( sample_num )   
{  
    case 1:  
        sph_R = 800.0;
        sph_dR = 0;  
        break;  
    case 2 :  
        sph_R = 120.0;
        sph_dR = 0;  
        break;  
    case 3 :  
        sph_R = 120.0;
        sph_dR = 3.0;  
        break;  
    case 4 :  
        sph_R = 120.0;
        sph_dR = 6.0;  
        break;  

    default :
        printf("Wrong sample choice! Operating at #1 - large spheres.\n");
        sph_R = 800.0;
        sph_dR = 0;
        break; 
} 
  
%}

TRACE

COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE

//Source

COMPONENT Source = Source_gen(
    radius = source_radius, dist = source_coll_dist, focus_xw = guide_width,
    focus_yh = guide_height, I1 = source_intensity, T1 = source_temp, Lmin = lambda_min,
    Lmax = lambda_max)
  AT (0, 0, 0) RELATIVE Origin

//Channel collimator

COMPONENT Collimator_uncoated = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = coll_length_uncoated, m = 0)
  AT (0, 0, source_coll_dist) RELATIVE Origin
  ROTATED (0, 0, 0) RELATIVE Origin

COMPONENT Collimator_coated = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = coll_length_coated, mleft = m_left_right, mright = m_left_right, mtop = m_top_bottom, mbottom = m_top_bottom, wavy = wavy, aleft = slope, aright = slope, R0 = R0)
  AT (0, 0, coll_length_uncoated + 1e-4) RELATIVE PREVIOUS

//Shutter 200mm


COMPONENT Guide_before = Guide_gravity(
    w1 = guide_width, h1 = guide_height, w2 = guide_width,
    h2 = guide_height, l = guide_before_length, R0 = R0,
    alpha = slope, mleft = m_left_right, mright = m_left_right,
    mtop = m_top_bottom, mbottom = m_top_bottom, aleft = slope,
    aright = slope, wavy = wavy)
  AT (0, 0, coll_length_coated + shutter1_length + 1e-4) RELATIVE Collimator_coated


//Bender

COMPONENT Bender_Arm_2 = Arm(
    )
  AT (0, 0, guide_before_length + 1e-4) RELATIVE Guide_before
  ROTATED (0, bender_rot, 0) RELATIVE Guide_before

COMPONENT Bender = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = bender_length, mleft = m_left_right, mright = m_left_right, mtop = m_top_bottom, mbottom = m_top_bottom, nslit = bender_chan_num, d = bender_wall_thick, wavy = wavy, aleft = slope, aright = slope, R0 = R0)
  AT (0, 0, 0) RELATIVE Bender_Arm_2
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_2

COMPONENT Bender_Arm_3 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_2
  ROTATED (0, bender_rot, 0) RELATIVE Bender_Arm_2

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_3
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_3

COMPONENT Bender_Arm_4 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_3
  ROTATED (0, bender_rot, 0) RELATIVE Bender_Arm_3

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_4
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_4

COMPONENT Bender_Arm_5 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_4
  ROTATED (0, bender_rot, 0) RELATIVE Bender_Arm_4

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_5
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_5

COMPONENT Bender_Arm_6 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_5
  ROTATED (0, bender_rot, 0) RELATIVE Bender_Arm_5

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_6
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_6

COMPONENT Bender_Arm_7 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_6
  ROTATED (0, bender_rot, 0) RELATIVE Bender_Arm_6

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_7
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_7

COMPONENT Bender_Arm_8 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_7

COMPONENT Guide_after = Guide_gravity(
    w1 = guide_width, h1 = guide_height, w2 = guide_width,
    h2 = guide_height, l = guide_after_length, R0 = R0,
    alpha = slope, mleft = m_left_right, mright = m_left_right,
    mtop = m_top_bottom, mbottom = m_top_bottom, aleft = slope,
    aright = slope, wavy = wavy)
  AT (0, 0, 1e-4) RELATIVE Bender_Arm_8

// Instrumental shutter gap

COMPONENT Guide_Arm = Arm(
   )
  AT (0,0, guide_after_length + shutter2_length) RELATIVE Guide_after

// Guide

COMPONENT Guide = Guide_gravity(
    w1 = guide_width, h1 = guide_height, w2 = guide_width,
    h2 = guide_height, l = guide_length, R0 = R0, m = m_overall,
    wavy = wavy)
  AT (0, 0, 0) RELATIVE Guide_Arm

// Instrument

COMPONENT Instrument_Arm = Arm(
    )
  AT (0,0, guide_length + 1e-4) RELATIVE Guide_Arm

	COMPONENT Guide_exit_lam = Monitor_nD(
	    options = "lambda limits = [0 25] bins = 250 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 1e-5) RELATIVE Instrument_Arm

	COMPONENT Guide_exit_divx = Monitor_nD(
	    options = "dx limits = [-1.5 1.5] bins = 30 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Guide_exit_divy = Monitor_nD(
	    options = "dy limits = [-1.5 1.5] bins = 30 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Guide_exit_xdivx = Monitor_nD(
	    options = "x limits = [-0.021 0.021] bins = 42 dx limits = [-1.5 1.5] bins = 30 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Guide_exit_divx_center = Monitor_nD(
	    options = "dx limits = [-0.25 0.25] bins = 30 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS


   COMPONENT Selector = V_selector(
       xwidth = guide_width, yheight = guide_height, zdepth = 0.30,
       radius = 0.12, alpha = 48.3, length = 0.25, d = 4e-4,
       nu = selector_nu, nslit = 72)
     AT (0, 0, 0.349) RELATIVE PREVIOUS

	COMPONENT Selector_exit = Monitor_nD(
	    options = "lambda limits = [0 25] bins = 250 per cm2", xwidth = guide_width,
	    yheight = guide_height, restore_neutron = 1)
	  AT (0, 0, 0.151) RELATIVE PREVIOUS

// gap 100mm

COMPONENT Coll_Arm = Arm(
    )
  AT (0, 0, 0.6) RELATIVE Instrument_Arm

COMPONENT Slit_coll_entry = Slit(
    xwidth = slit1_w, yheight = slit1_w)
  AT (0, 0, 0) RELATIVE Coll_Arm

COMPONENT Slit_coll_middle = Slit(
    xwidth = slit2_w, yheight = slit2_w)
  AT (0, 0, coll_line_length / 2.0)  RELATIVE Slit_coll_entry

COMPONENT Slit_coll_exit = Slit(
    xwidth = slit3_w, yheight = slit3_w)
  AT (0, 0, coll_line_length)  RELATIVE Slit_coll_entry

// gap 100mm + 500mm

COMPONENT Dia_sample = Slit(
    xwidth = slit3_w, yheight = slit3_w)
  AT (0, 0, 0.6) RELATIVE Slit_coll_exit

COMPONENT Sample_Arm = Arm(
    )
  AT (0, 0, 0.7) RELATIVE Slit_coll_exit

/*
	COMPONENT Sample_lam = Monitor_nD(
 	   options = "lambda limits = [3.5 5.5] bins=100 per cm2", xwidth = slit2_w,
 	   yheight = slit2_w, restore_neutron = 1)
 	 AT (0, 0, 1e-3) RELATIVE Sample_Arm
*/

COMPONENT Sample_spheres = SANSSpheres(
	R = sph_R, dR= sph_dR, Concentration = 0.01, DeltaRho = 1.0e-14, AbsorptionCrosssection = 0.0, 
	xwidth = sample_dim, yheight = sample_dim, zdepth = 0.01, SampleToDetectorDistance = Lsd,
	DetectorRadius = 0.45)
  AT (0, 0, 0) RELATIVE Sample_Arm

/*
SPLIT COMPONENT Sample = SANSLiposomes(
	xwidth = 0.1,
	yheight = 0.1,
	zdepth = sam_z2,
	SampleToDetectorDistance = Lsd,
	DetectorRadius = 0.45)
AT (0, 0, 0) RELATIVE Sample_Arm
*/
/*
COMPONENT Sample = SANSCylinders(
	R = 40.0, Height = 100.0, Concentration = 0.01, DeltaRho = 1.0e-14, AbsorptionCrosssection = 0.0,
	xwidth = 0.1,
	yheight = 0.1,
	zdepth = 0.005,
	SampleToDetectorDistance = Lsd,
	DetectorRadius = 0.45)
AT (0, 0, 0) RELATIVE Sample_Arm
*/

COMPONENT Beanstop = Beamstop(
    xwidth = 3.0*slit2_w, yheight = 3.0*slit2_w)
  AT (0, 0, Lsd - 0.1) RELATIVE Sample_Arm

	COMPONENT QMonitor = SANSQMonitor(
	  RadiusDetector = 0.45,
  	  DistanceFromSample = Lsd,
	  LambdaMin = 0.9*lambda,
	  Lambda0 = lambda,
	  NumberOfBins = 128,
	  restore_neutron = 1)
	AT (0, 0, Lsd) RELATIVE Sample_Arm

	COMPONENT Detector = Monitor_nD(
	    options = "x limits = [-0.32 0.32] bins = 128 y limits = [-0.32 0.32] bins = 128", xwidth = 0.64,
	    yheight = 0.64, restore_neutron = 1, filename="Detector2D.dat")
	  AT (0, 0, Lsd + 1e-3) RELATIVE Sample_Arm

/*
SPLIT COMPONENT H51_D22_Sample = Isotropic_Sqw(radius=0.005,yheight=0.05, 
  Sqw_coh="H2O_liq.qSq", Sqw_inc=NULL, d_phi=20)
AT (0,0,2e-3) RELATIVE Sample_Arm
EXTEND %{
  if (!SCATTERED) ABSORB;
%}
*/
/*
	COMPONENT Sample_divx = Monitor_nD(
	    options = "dx limits = [-1.5 1.5] bins = 100 per cm2", xwidth = slit2_w,
	    yheight = slit2_w, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Sample_divy = Monitor_nD(
	    options = "dy limits = [-1.5 1.5] bins = 100 per cm2", xwidth = slit2_w,
	    yheight = slit2_w, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Sample_x = Monitor_nD(
	    options = "x limits = [-0.015 0.015] bins = 60", xwidth = slit2_w,
	    yheight = slit2_w, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS

	COMPONENT Sample_y = Monitor_nD(
	    options = "y limits = [-0.015 0.015] bins = 60", xwidth = slit2_w,
	    yheight = slit2_w, restore_neutron = 1)
	  AT (0, 0, 0) RELATIVE PREVIOUS
*/

FINALLY
%{
%}

END


























































































































































































