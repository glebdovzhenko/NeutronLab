/*******************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: test (rename also the example and DEFINE lines below)
*
* %Identification
* Written by: Yury Kireenko
* Checked by: Konstantin Pavlov
* Date: 05.02.2018
* Origin: Your institution
* Release: McStas CVS-080208
* Version: 0.2
* %INSTRUMENT_SITE: Templates (replace with Institution_name_as_a_single_word)
*
* Instrument short description
* Model of a cold powder diffractometer optimized for school teaching lab
* %Description
* Instrument longer description (type, elements, usage...)
*
* Example: mcrun test.instr <parameters=values>
*
* %Parameters
* Par1: [unit] Parameter1 description
*
* %Link
* A reference/HTML link for more information
*
* %End
*******************************************************************************/
DEFINE INSTRUMENT H2_CD(lambda=3, div_col = 45, sample_num = 0)

DECLARE
%{
//test
double l_m=0.1, wavy = 0, R0 = 1, Rm2 = 0.93;
//source parameters
double source_radius = 0.084;
double source_intensity = 1.6e13; //this is in 4PI, need to be divided
double source_temp = 30;

//collimator parameters
double source_coll_dist = 1.307;
double guide_width = 0.02, guide_height = 0.12;
double coll_length = 1.005;
double coll_length_uncoated = 0.305, coll_length_coated;
double m_left_right = 2, m_top_bottom = 2;
double shutter1_length = 0.2;
double slope;

//bender parameters
double guide_before_length = 1.0, bender_length = 3.4, guide_after_length = 1.1;
double bender_wall_thick = 0.0004;
double bender_rot = 0.0122;
int bender_piece_num = 7;//number of bender pieces
double m_overall = 2;
double bender_chan_num = 6;

//guide parameters
double shutter2_length = 0.3;
double guide_length = 21.0;

//monochromator
double width_mon_flat=0.08, height_mon_flat=0.12, mosaic_flat_h=30, mosaic_flat_v=30, d_lattice_parameter_flat=3.355;
double width_slab=0.08, height_slab=0.01, n_vert = 15, dRV=1 , d_lattice_parameter_curv=3.355, mosaic_curv=30;
double RV;
//double dRV = 1;
double mosaic = 30;
double l_mon = 0.5;
double l_s;
double l_m_m;

//temp
  double D_PHI=6, SHIFT=0, PACK=0.7, Dw=0.8, BARNS=1;
  double sample_radius = 0.008/2;
  double sample_height = 0.03;
  double can_radius = 0.0083/2;
  double can_height = 0.0303;
  double can_thick = 0.00015;
  
  /******Mirrorvalues*****/
  
  double alpha;
  double Qc=0.0217;
  double Mvalue=1.9;
  double W=1.0/250.0;
  
  double alpha_curve;
  double Qc_curve=0.0217;
  double R0_curve= 0.995;
  double Mvalue_curve=2.1;
  double W_curve=1.0/250.0;
  
  double ldiff=0.05;
  /* Curved guide element angle*/
  double angleGuideCurved;

%}

INITIALIZE
%{

//RH = -dRH*2*foc_dist*d_lattice_parameter/lambda;
l_m_m = 0.19/tan(asin(lambda/2/d_lattice_parameter_flat));
l_s=2.46-l_m-l_m_m;
RV=-dRV*l_s*lambda/2/d_lattice_parameter_curv;

wavy = wavy*1e-3*sqrt(8*log(2))*RAD2DEG; //translate mrad to rad and then to degs
slope = (1 - Rm2/R0)/0.0218; //slope calculation from reflectivity values

source_intensity = source_intensity/4/PI; //normilize source intensity in 1 sr

coll_length_coated = coll_length - coll_length_uncoated;

bender_length = bender_length/bender_piece_num; //now bender length is one piece length
bender_rot = bender_rot*RAD2DEG/bender_piece_num; //now bender piece rotation

%}

TRACE

COMPONENT Origin = Progress_bar()
  AT (0,0,0) ABSOLUTE

//Source

COMPONENT Source = Source_gen(
    radius = source_radius, dist = source_coll_dist, focus_xw = guide_width,
    focus_yh = guide_height, I1 = source_intensity, T1 = source_temp, Lmin =lambda*0.95 , Lmax = lambda*1.05)
  AT (0, 0, 0) RELATIVE Origin

//Channel collimator

COMPONENT Collimator_uncoated = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = coll_length_uncoated, m = 0)
  AT (0, 0, source_coll_dist) RELATIVE Origin

COMPONENT Collimator_coated = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = coll_length_coated, mleft = m_left_right, mright = m_left_right, mtop = m_top_bottom, mbottom = m_top_bottom, wavy = wavy, R0 = R0, alpha = slope)
  AT (0, 0, coll_length_uncoated) RELATIVE PREVIOUS

//Shutter 200mm

COMPONENT Guide_before = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = guide_before_length, mleft = m_left_right, mright = m_left_right, mtop = m_top_bottom, mbottom = m_top_bottom, wavy = wavy, R0 = R0, alpha = slope)
  AT (0, 0, coll_length_coated + shutter1_length) RELATIVE Collimator_coated

//Bender

COMPONENT Bender_Arm_1 = Arm(
    )
  AT (0, 0, guide_before_length + 1e-2) RELATIVE Guide_before
  ROTATED (0,bender_rot, 0) RELATIVE Guide_before

COMPONENT Bender = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = bender_length, mleft = m_left_right, mright = m_left_right, mtop = m_top_bottom, mbottom = m_top_bottom, nslit = bender_chan_num, d = bender_wall_thick, wavy = wavy, R0 = R0, alpha = slope)
  AT (0, 0, 0) RELATIVE Bender_Arm_1
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_1

COMPONENT Bender_Arm_2 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_1
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_1

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_2
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_2

COMPONENT Bender_Arm_3 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_2
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_2

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_3
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_3

COMPONENT Bender_Arm_4 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_3
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_3

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_4
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_4

COMPONENT Bender_Arm_5 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_4
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_4

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_5
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_5

COMPONENT Bender_Arm_6 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_5
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_5

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE Bender_Arm_6
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_6

COMPONENT Bender_Arm_7 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_6
  ROTATED (0,bender_rot, 0) RELATIVE Bender_Arm_6

COMPONENT COPY(Bender) = COPY(Bender)()
  AT (0, 0, 0) RELATIVE PREVIOUS
  ROTATED (0, 0, 0) RELATIVE Bender_Arm_7

COMPONENT Bender_Arm_8 = Arm(
    )
  AT (0, 0, bender_length) RELATIVE Bender_Arm_7

COMPONENT Guide_after = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = guide_after_length, m = m_overall, wavy = wavy, R0 = R0, alpha = slope)
  AT (0, 0, 2e-3) RELATIVE Bender_Arm_8

//Gap 

//Guide

COMPONENT Guide_Arm = Arm(
    )
  AT (0, 0, guide_after_length) RELATIVE Guide_after

COMPONENT Guide = Guide_gravity(
    w1 = guide_width, h1 = guide_height, l = guide_length, mleft = 1, mright = 1, mtop = m_top_bottom, mbottom = m_top_bottom, wavy = wavy, R0 = R0, alpha = slope)
  AT (0, 0, 0) RELATIVE Guide_Arm


COMPONENT Guide_end_Arm = Arm(
    )
  AT (0, 0, guide_length + 1e-2) RELATIVE Guide_Arm

/* ******************************* monitors after guide section  *************************************/  


COMPONENT Detector_lam = Monitor_nD(
    options = "lambda limits = [0 10] per cm2", xwidth = 0.022,
    yheight = 0.12, bins = 100, restore_neutron = 1)
  AT (0, 0, 0.01) RELATIVE PREVIOUS

COMPONENT Detector_lam2 = Monitor_nD(
    options = "lambda limits = [0 10]", xwidth = 0.022,
    yheight = 0.12, bins = 100, restore_neutron = 1)
  AT (0, 0, 0) RELATIVE PREVIOUS

COMPONENT Detector_psd = Monitor_nD(
    options = "x y ", xwidth = 0.14,
    yheight = 0.14, bins = 140, restore_neutron = 1)
  AT (0, 0, 0) RELATIVE PREVIOUS

COMPONENT vdiv = Monitor_nD(
    options = "vdiv limits = [-1 1]", xwidth = 0.03,
    yheight = 0.029, bins = 100, restore_neutron = 1)
  AT (0, 0, 0) RELATIVE PREVIOUS

COMPONENT hdiv = Monitor_nD(
    options = "xdiv limits = [-1 1]", xwidth = 0.03,
    yheight = 0.029, bins = 100, restore_neutron = 1)
  AT (0, 0, 0) RELATIVE PREVIOUS


/* ******************************* 1st flat Monochromator  *************************************/     

COMPONENT mon_IN = Arm(
    )
  AT (0, 0, l_m) RELATIVE Guide_end_Arm


COMPONENT mon_flat = Monochromator_flat(
    zwidth = width_mon_flat, yheight = height_mon_flat, mosaich = mosaic_flat_h, mosaicv = mosaic_flat_v,
    DM = d_lattice_parameter_flat)
  AT (0, 0, 0) RELATIVE mon_IN
 ROTATED (0, asin(lambda/2/d_lattice_parameter_flat)*RAD2DEG, 0) RELATIVE mon_IN

COMPONENT mon_OUT = Arm(
    )
  AT (0, 0, l_m) RELATIVE Guide_end_Arm
  ROTATED (0, 2*asin(lambda/2/d_lattice_parameter_flat)*RAD2DEG, 0) RELATIVE Guide_end_Arm


/* ******************************* 2st curved Monochromator  *************************************/     

COMPONENT mon_IN2 = Arm(
    )
  AT (0, 0, 0.19/sin(2*asin(lambda/2/d_lattice_parameter_flat))) RELATIVE mon_OUT


COMPONENT mon_curv = Monochromator_curved(
    zwidth = width_slab, yheight = height_slab, NH = 1, NV = n_vert, DM = d_lattice_parameter_curv,
    mosaic = mosaic_curv, RV=RV)
  AT (0, 0, 0) RELATIVE mon_IN2
 ROTATED (0, -asin(lambda/2/d_lattice_parameter_curv)*RAD2DEG, 0) RELATIVE mon_IN2


COMPONENT mon_OUT2 = Arm(
    )
  AT (0, 0, 0.19/sin(2*asin(lambda/2/d_lattice_parameter_curv))) RELATIVE mon_OUT
  ROTATED (0, -2*asin(lambda/2/d_lattice_parameter_curv)*RAD2DEG, 0) RELATIVE mon_OUT


/* *************************************** Collimator **************************************************/     

COMPONENT Focusing_collimator = Guide_gravity(
    w1= 0.03,h1=0.12, w2 = 0.02, h2 = 0.005, l = l_s-0.9, mleft = 2.5, mright = 2.5, mtop = 2.5, mbottom = 2.5)
  AT (0, 0, 0.4) RELATIVE mon_OUT2

COMPONENT collimator_linear_before_sample = Collimator_linear(
    xwidth=0.02, 
    yheight=0.005, 
    length=0.3, 
    divergence=div_col)
AT (0, 0, l_s-0.9+0.001) RELATIVE PREVIOUS

/* *************************************** monitors in sample position *********************************************/

COMPONENT monit_sample_x_y = Monitor_nD(
    xwidth =  0.05, yheight = 0.05, options = "x y", bins=100)
  AT (0, 0, l_s) RELATIVE mon_OUT2

COMPONENT monit_sample_position = Monitor_nD(
    xwidth = 0.01, yheight = 0.01, filename = "sample2", options="lambda limits=[2.85 3.15]",bins=50)
  AT (0, 0, l_s+0.001) RELATIVE mon_OUT2

COMPONENT monit_sample_hdiv = Monitor_nD(
    xwidth =  0.01, yheight = 0.01, options = "hdiv", bins=50)
  AT (0, 0, 0.001) RELATIVE PREVIOUS

COMPONENT monit_sample_vdiv = Monitor_nD(
    xwidth =  0.01, yheight = 0.01, options = "vdiv", bins=50)
  AT (0, 0, 0.001) RELATIVE PREVIOUS

/* *************************************** Sample **************************************************/

COMPONENT sa_arm = Arm()
   AT (0, 0, 0.01) RELATIVE PREVIOUS 
   ROTATED (0, 0, 0) RELATIVE PREVIOUS 

SPLIT 10 COMPONENT sample = PowderN (
	d_phi=D_PHI,radius=sample_radius, yheight=sample_height, DW=Dw,
  pack=PACK, reflections = "Na2Ca3Al2F14.laz", barns=BARNS, p_transmit=0, p_inc=0)
AT ( 0, 0, 0) RELATIVE sa_arm
EXTEND
%{
     if (!SCATTERED) ABSORB;
%}
//"Na2Ca3Al2F14.laz"
//"Al.laz"

/* *************************************** Detector **************************************************/

COMPONENT Detector = Monitor_nD(
  xwidth=3.0, yheight=0.09, filename="detector.dat", min=0.1+SHIFT, max=149.9+SHIFT, bins=400,
  options="banana, theta")
AT (0,0,0) RELATIVE sa_arm
ROTATED (0, 0, 180) RELATIVE sa_arm

/* ******************************* Sample/Vanadium  *************************************/    
/*
COMPONENT sample = Incoherent(
    xwidth = 0.01, yheight = 0.01, zdepth = 0.01, target_x = 0,target_y=0, target_z = 0.6,focus_xw=0.25, focus_yh=0.25)
  AT (0, 0, 0.1) RELATIVE PREVIOUS
EXTEND
%{
     if (!SCATTERED) ABSORB;
%}
*/

FINALLY
%{
%}

END







